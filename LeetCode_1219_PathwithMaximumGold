class Solution {
    int res = Integer.MIN_VALUE;
    public int getMaximumGold(int[][] grid) {
        for(int i = 0; i < grid.length; i++) {
            for(int j = 0; j < grid[0].length; j++) {
                if(grid[i][j] > 0) {
                    dfs(i, j, grid, 0);
                }
            }
        }
        
        return res;
    }
    
    private void dfs(int i, int j, int[][] grid, int curSum) {
        if(i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == 0) return;
        
        int origin = grid[i][j];
        curSum += origin;
        grid[i][j] = 0;
        
        res = Math.max(res, curSum);
        dfs(i+1, j, grid, curSum);
        dfs(i, j+1, grid, curSum);
        dfs(i-1, j, grid, curSum);
        dfs(i, j-1, grid, curSum);

        grid[i][j] = origin;
    }
}
