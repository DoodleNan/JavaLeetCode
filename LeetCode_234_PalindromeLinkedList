/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null) return true;
        List<Integer> store = new ArrayList<>();
        
        while(head != null) {
            store.add(head.val);
            head = head.next;
        }
        
        for(int i = 0; i < store.size() / 2; i++) {
            int a = store.get(i);
            int b = store.get(store.size() - 1 - i);
            if(!store.get(i).equals(store.get(store.size() - 1 - i))) return false;
        }
        
        return true;
    }
}
