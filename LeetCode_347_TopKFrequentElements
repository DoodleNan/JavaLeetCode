class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> hm = new HashMap<>();
        for(int num : nums) {
            hm.put(num, hm.getOrDefault(num, 0) + 1);
        }
        
        Queue<Map.Entry<Integer, Integer>> maxHeap = new PriorityQueue<>((a, b) -> b.getValue() - a.getValue());
        for(Map.Entry<Integer, Integer> entry : hm.entrySet()) {
            maxHeap.offer(entry);
        }
        
        int[] res = new int[k];
        for(int i = 0; i < k; i++) {
            res[i] = maxHeap.poll().getKey();
        }
        
        return res;
    }
}
