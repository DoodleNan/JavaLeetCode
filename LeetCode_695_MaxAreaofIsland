class Solution {
    int res = 0;
    public int maxAreaOfIsland(int[][] grid) {
        if(grid == null) return 0;
        int row = grid.length;
        if(row == 0) return 0;
        int col = grid[0].length;
        if(col == 0) return 0;
        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(grid[i][j] == 1) {
                    res = Math.max(res, dfs(grid, i, j));
                }
            }
        }
        
        return res;
    }
    
    private int dfs(int[][] grid, int i, int j) {
        if(i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] == 0) return 0;
        grid[i][j] = 0;
        int[] help = new int[]{1, 0, -1, 0, 1};
        int ret = 0;
        for(int dir = 0; dir < 4; dir++) {
            ret += dfs(grid, i + help[dir], j + help[dir+1]);
        }
        
        return ret + 1;
    }
}
