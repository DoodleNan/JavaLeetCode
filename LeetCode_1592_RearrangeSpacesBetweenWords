class Solution {
    public String reorderSpaces(String text) {
        int count = 0;
        int countWord = 0;
        boolean isPreText = false;
        for(int i = 0; i < text.length(); i++) {
            if(text.charAt(i) == ' ') {
                count++;
                isPreText = false;
            }else{
                if(!isPreText) {
                    countWord++;
                    isPreText = true;
                }
            }
        }
        
        StringBuilder sb = new StringBuilder();
        if(countWord == 1) {
            for(int i = 0; i < text.length(); i++) {
                if(text.charAt(i) != ' ') {
                    sb.append(text.charAt(i));
                }
            }
            
            for(int i = 0; i < count; i++) {
                sb.append(' ');
            }
            
            return sb.toString();
        }
        int space = count / (countWord - 1);
        int remainder = count % (countWord - 1);
        
        
        isPreText = false;
        for(int i = 0; i < text.length(); i++) {
            if(text.charAt(i) != ' ') {
                sb.append(text.charAt(i));
                isPreText = true;
            }else{
                if(isPreText && (countWord - 1) > 0) {
                    for(int j = 0; j < space; j++){
                        sb.append(" ");
                    }
                    countWord--;
                }
                
                isPreText = false;
            }
        }
        
        if(remainder > 0){
            for (int i = 0; i < remainder; i++) {
                sb.append(" ");
            }
        }
        
        return sb.toString();
    }
}
