/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ret = 0;
    public int distributeCoins(TreeNode root) {
        int res = 0;
        if(root == null) return 0;
        dfs(root);
        
        return ret;
    }
    
    private List<Integer> dfs(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        int nodeCount = 1;
        int valSum = root.val;
        
        if(root.left != null) {
            List<Integer> left = dfs(root.left);
            nodeCount += left.get(0);
            valSum += left.get(1);
        }
        if(root.right != null) {
            List<Integer> right = dfs(root.right);
            nodeCount += right.get(0);
            valSum += right.get(1);
        }
        
        res.add(nodeCount);
        res.add(valSum);
        ret += Math.abs(nodeCount - valSum);
        
        return res;
    }
}
