/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res = 0;
    public int findSecondMinimumValue(TreeNode root) {
        dfs(root, root.val);
        return res <= 1 ? -1 : res;
    }
    
    private void dfs(TreeNode root, int min){
        if(root == null) return;
        if(root.val == min) {
            dfs(root.left, min);
            dfs(root.right, min);
        }else if(root.val > min) {
            if(res < 1) {
                res = root.val;
            }else{
                if(root.val < res) {
                    res = root.val;
                }
            }
        }
    }
}
